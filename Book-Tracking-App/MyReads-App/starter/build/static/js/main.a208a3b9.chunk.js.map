{"version":3,"sources":["components/Heading.js","components/BookItem.js","BooksAPI.js","components/BookShelf.js","components/SearchButton.js","components/ShelvesView.js","components/SearchView.js","App.js","index.js"],"names":["Heading","className","BookItem","bookInfo","shelves","updateState","style","width","height","backgroundImage","bgImageUrl","value","shelf","onChange","event","target","disabled","map","shelfName","shelfDisplayName","title","authors","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","book","fetch","id","method","body","JSON","stringify","then","res","json","search","query","maxResults","data","books","BookShelf","shelfTitle","viewTitle","useState","allBooks","setAllBooks","getAllBooks","a","useEffect","filter","shelfBook","imageLinks","thumbnail","handleUpdateState","SearchButton","to","ShelvesView","SearchView","searchResults","setSearchResults","setQuery","searchBooks","BooksApi","undefined","validatedBooks","result","myBook","type","placeholder","length","forEach","smallThumbnail","err","console","log","App","setBooks","newShelf","BooksAPI","b","exact","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a208a3b9.chunk.js","sourcesContent":["import \"../App.css\";\r\n\r\n\r\nconst Heading=()=>{\r\n\r\n\r\n    return (\r\n\r\n        \r\n        <div className=\"list-books-title\">\r\n            <h1>MyReads</h1>\r\n          </div>\r\n    )\r\n}\r\n\r\nexport default Heading;","import \"../App.css\"\r\n\r\n\r\nconst BookItem=({bookInfo,shelves,updateState})=>{\r\n\r\n\r\n\r\n\r\n  const handleUpdateState=(shelf)=>{\r\n\r\n    updateState(bookInfo,shelf);\r\n  }\r\n\r\n\r\n    return (\r\n        \r\n              <div className=\"book\">\r\n                <div className=\"book-top\">\r\n                  <div\r\n                    className=\"book-cover\"\r\n                    style={{\r\n                      width: 128,\r\n                      height: 193,\r\n                      backgroundImage:\r\n                        `url(${bookInfo.bgImageUrl})`,\r\n                    }}\r\n                  ></div>\r\n                  <div className=\"book-shelf-changer\">\r\n                    <select value={bookInfo.shelf} onChange={(event)=>{\r\n                        handleUpdateState(event.target.value);\r\n\r\n\r\n                    }}>\r\n                      <option value=\"none\" disabled>\r\n                        Move to...\r\n                      </option>\r\n                      <option >None</option>\r\n                      {\r\n                        // creating an option for each shelf\r\n                        shelves.map((shelf)=>{\r\n                          \r\n                          return(\r\n\r\n                          <option value={shelf.shelfName}>{shelf.shelfDisplayName}</option>\r\n\r\n                          )\r\n                        })\r\n\r\n\r\n\r\n                      }\r\n                      \r\n                      \r\n                    </select>\r\n                  </div>\r\n                </div>\r\n                <div className=\"book-title\">{bookInfo.title}</div> \r\n                <div className=\"book-authors\">{ \r\n                bookInfo.authors\r\n\r\n                }</div>\r\n              </div>\r\n    )\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default BookItem;","const api = \"https://reactnd-books-api.udacity.com\";\r\n\r\nlet token = localStorage.token;\r\n\r\nif (!token) token = localStorage.token = Math.random().toString(36).substr(-8);\r\n\r\nconst headers = {\r\n  Accept: \"application/json\",\r\n  Authorization: token,\r\n};\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then((res) => res.json())\r\n    .then((data) => data.book);\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then((res) => res.json())\r\n    .then((data) => data.books);\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      ...headers,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ shelf }),\r\n  }).then((res) => res.json());\r\n\r\nexport const search = (query, maxResults) =>\r\n  fetch(`${api}/search`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      ...headers,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ query, maxResults }),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((data) => data.books);\r\n","\r\nimport \"../App.css\";\r\nimport BookItem from \"./BookItem\";\r\nimport * as BooksApi from \"../BooksAPI\"\r\nimport { useEffect, useState } from \"react\";\r\n\r\n\r\n// takes also books array to  be showed in UI\r\n\r\n\r\nconst BookShelf=({shelfTitle,viewTitle,shelves,updateState})=>{\r\n\r\n\r\n\r\n\r\n\r\nconst [allBooks,setAllBooks]=useState([]);\r\n\r\n  //fetch books from given shelf \r\n\r\n   const getAllBooks=async()=>{\r\n\r\n    let books= await BooksApi.getAll();\r\n\r\n    setAllBooks(books);\r\n    \r\n   }\r\n\r\n\r\n   \r\n   useEffect(\r\n     ()=>{\r\n        getAllBooks();\r\n      \r\n     }\r\n   ,[allBooks]);\r\n \r\n\r\n\r\n   const handleUpdateState=(bookInfo,shelf)=>{\r\n\r\n  updateState(bookInfo,shelf)\r\n\r\n\r\n\r\n}\r\n\r\n\r\n \r\n\r\n    return(\r\n\r\n        <div className=\"bookshelf\">\r\n        <h2 className=\"bookshelf-title\">{viewTitle}</h2>\r\n        <div className=\"bookshelf-books\">\r\n          <ol className=\"books-grid\">\r\n            {\r\n            \r\n            allBooks.filter((book)=>book.shelf === shelfTitle).map((shelfBook)=>{\r\n                let bookInfo={ id:shelfBook.id,\r\n                  title:shelfBook.title,\r\n                  authors:shelfBook.authors,\r\n                  bgImageUrl:shelfBook.imageLinks.thumbnail,\r\n                  shelf:shelfBook.shelf\r\n\r\n\r\n                }\r\n                handleUpdateState(bookInfo,bookInfo.shelf);\r\n\r\n                return (\r\n                  <li>\r\n\r\n                  <BookItem key={shelfBook.id} bookInfo={bookInfo} shelves={shelves} updateState={updateState}/>\r\n                  </li>\r\n\r\n                )\r\n\r\n              })\r\n\r\n\r\n            }\r\n\r\n          </ol>\r\n        </div>\r\n      </div>\r\n\r\n\r\n    )\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default BookShelf;","\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../App.css\"\r\n\r\nconst SearchButton=()=>{\r\n\r\n    return (\r\n        \r\n        <div className=\"open-search\">\r\n        <Link to=\"/search\">Add a book</Link>\r\n      </div>\r\n    )\r\n\r\n}\r\n\r\nexport default SearchButton;","import \"../App.css\"\r\n\r\nimport Heading from \"./Heading\";\r\nimport BookShelf from \"./BookShelf\";\r\nimport SearchButton from \"./SearchButton\";\r\n\r\nconst ShelvesView=({shelves,updateState})=>{\r\n\r\n\r\n  \r\n\r\n\r\n    return(\r\n        <div className=\"app\">\r\n        <div className=\"list-books\">\r\n          <Heading key=\"heading-title\"/>\r\n          <div className=\"list-books-content\">\r\n            <div>\r\n              <BookShelf key={\"shelf\"+shelves[0].id} shelfTitle={\"read\"} viewTitle={\"Read\"} shelves={shelves} updateState={updateState}/>\r\n              <BookShelf key={\"shelf\"+shelves[1].id} shelfTitle={\"wantToRead\"} viewTitle={\"Want to read\"} shelves={shelves} updateState={updateState}/>\r\n              <BookShelf key={\"shelf\"+shelves[2].id} shelfTitle={\"currentlyReading\"} viewTitle={\"Currently reading\"} shelves={shelves} updateState={updateState}/>  \r\n            </div>\r\n          </div>\r\n          <SearchButton key=\"search-button\"/>\r\n        </div>\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ShelvesView;","import { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as BooksApi from \"../BooksAPI\";\r\nimport BookItem from \"./BookItem\";\r\n\r\n\r\n\r\n\r\n\r\nconst SearchView=({shelves,updateState,books})=>{\r\n \r\n\r\n  const [searchResults,setSearchResults]=useState([]);\r\n  const [query,setQuery]=useState('');\r\n\r\n\r\n  const searchBooks=async(query,maxResults)=>{\r\n\r\n    let books= await BooksApi.search(query,maxResults);\r\n    if(query==='')\r\n    {\r\n      setSearchResults([])\r\n    }\r\n    \r\n \r\n    if(books!==undefined)\r\n    {\r\n     setSearchResults(books);\r\n    }\r\n   \r\n  }\r\n\r\n  useEffect(async()=>{\r\n\r\n   \r\n    searchBooks(query,100);\r\n    \r\n    return ()=>{\r\n\r\n      setSearchResults([]);\r\n      setQuery('');\r\n\r\n\r\n    }\r\n\r\n  },[query])\r\n\r\n\r\n\r\n   const validatedBooks=searchResults.map(\r\n     (result)=>{\r\n\r\n      const myBook=books.filter((book)=>(book.id===result.id))[0];\r\n       result.shelf=myBook?myBook.shelf:\"none\"\r\n\r\n\r\n     return result;\r\n\r\n     }\r\n   );\r\n  \r\n\r\n\r\n\r\n    return (\r\n    <div className=\"search-books\">\r\n          <div className=\"search-books-bar\">\r\n            <Link\r\n              className=\"close-search\"\r\n              to=\"/\"\r\n            >\r\n              Close\r\n            </Link>\r\n\r\n            <div className=\"search-books-input-wrapper\">\r\n              <input\r\n                type=\"text\"\r\n                value={query}\r\n                placeholder=\"Search by title, author, or ISBN\"\r\n                onChange={(event)=>{setQuery(event.target.value)}}\r\n              />\r\n            </div>\r\n\r\n\r\n          </div>\r\n          <div className=\"search-books-results\">\r\n            <ol className=\"books-grid\">\r\n {\r\n\r\n   \r\n\r\n\r\n\r\n\r\n  validatedBooks.length &&\r\n  validatedBooks.map((result)=>{\r\n\r\n    try{\r\n\r\n      books.forEach(book => {\r\n        if(result.id===book.id)\r\n        {\r\n          result.shelf=book.shelf\r\n        }\r\n        \r\n        \r\n      });\r\n    \r\n\r\n    let bookInfo={ id:result.id,\r\n      title:result.title,\r\n      authors:result.authors,\r\n      bgImageUrl:result.imageLinks.thumbnail || result.imageLinks.smallThumbnail,\r\n      shelf:result.shelf\r\n      }\r\n  \r\n    return(\r\n    <li>\r\n    <BookItem key={bookInfo.id} bookInfo={bookInfo} shelves={shelves} updateState={updateState}/>\r\n    </li>\r\n    )\r\n    } catch(err)\r\n    {\r\n      console.log(err)\r\n    }\r\n\r\n    \r\n\r\n\r\n  })\r\n    \r\n\r\n\r\n}\r\n\r\n            </ol>\r\n          </div>\r\n        </div>\r\n\r\n      )\r\n}\r\n\r\nexport default SearchView;","import \"./App.css\";\r\n\r\nimport { Route,Routes } from \"react-router-dom\";\r\nimport ShelvesView from \"./components/ShelvesView\";\r\nimport SearchView from \"./components/SearchView\";\r\nimport { useState } from \"react\";\r\nimport * as BooksAPI from \"./BooksAPI\"\r\n\r\nfunction App() {\r\n\r\n const shelves=[ {id:\"1\",shelfName:\"read\",shelfDisplayName:\"Read\"},\r\n {id:\"2\",shelfName:\"currentlyReading\",shelfDisplayName:\"Currently reading\"},\r\n {id:\"3\",shelfName:\"wantToRead\",shelfDisplayName:\"Want to read\"}\r\n \r\n]\r\n  \r\n\r\n const [books,setBooks]= useState([]);\r\n\r\n\r\n\r\n\r\n const updateState=async(book,newShelf)=>{\r\n   book.shelf=newShelf;\r\n\r\n   await BooksAPI.update(book, newShelf);\r\n  \r\n    setBooks([...books.filter((b) => b.id !== book.id), book]);\r\n  \r\n }\r\n\r\n\r\n\r\n\r\n \r\n\r\n\r\n\r\n  return (\r\n    <Routes>\r\n      <Route exact path=\"/\" element={<ShelvesView key=\"shelves\" shelves={shelves} updateState={updateState} />}/>\r\n\r\n     <Route exact path=\"/search\" element={<SearchView key=\"search-page\" shelves={shelves} books={books} updateState={updateState}/>}/>\r\n\r\n\r\n    </Routes>\r\n\r\n\r\n\r\n\r\n   \r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport {BrowserRouter} from \"react-router-dom\";\r\n\r\n\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n    <App key=\"app\" />\r\n    </BrowserRouter>\r\n    ,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}